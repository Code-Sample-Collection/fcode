
   Software associated with the textbook Numerical Mathematics and 
Computing, Fifth Edition, Ward Cheney & David Kincaid, Brooks/Cole 
Publishing Co., 2003, ISBN 0-534-20112-1, is available from several sources:


   - by using anonymous ftp from math.utexas.edu as follows:


         ftp math.utexas.edu
         Name:  anonymous
         Password:  user ID
         ftp> cd pub/papers/CNA/cheney-kincaid
         ftp> get README

  - Web page  ftp://ftp.ma.utexas.edu/pub/cheney-kincaid
     

   Files are available for the pseudocode in the textbook written in either 
Fortran 77, Fortran 90, or C. Also, files are available containing Maple and 
Matlab programs.

   The table on the following pages lists Fortran 90 files containing sample
programs based on the pseudocode given in the book. They are intended 
primarily as a learning and teaching aid for use with this book. We believe 
that these computer routines are coded in a clear and easy-to-understand style
but we have intentionally excluded comment statements so that students will 
read the code and study the algorithms---they can add comments as they decipher
them. These programs are usable on computer systems with appropriate 
compilers, from small personal computers to large scientific computing 
machines.  However, they do not contain all of the "bells-and-whistles" of 
robust state-of-the-art software such as may be found in general-purpose 
scientific libraries.  Nevertheless, they are adequate for many small 
nonpathological problems.



                                 1




File Name          Pages    Description of Fortran 90 Code

CHP01/
  pi.f90               7    Simple code to illustrate double precision
  first.f90         10-11   First programming experiment
CHP02/
  numbers.f90       53-55   Print internal machine representation of various nu*
 *mbers
  hex.f90           60-62   Print in hexadecimal format
  oct.f90           60-62   Print in octal format
  xsinx.f90           71    Example of programming f(x) = x  sinx carefully
CHP03/
  bisection.f90       85    Bisection method
  rec_bisection.f90   86    Recursive version of bisection method
  newton.f90          95    Sample Newton method
  secant.f90         110    Secant method
CHP04/
  coef.f90           132    Newton interpolation polynomial at equidistant pts
  deriv.f90          156    Derivative by center diff./Richardson extrapolation
CHP05/
  sums.f90           171    Upper/lower sums experiment for an integral
  trapezoid.f90      176    Trapezoid rule experiment for an integral
  romberg.f90        190    Romberg arrays for three separate functions
CHP06/
  rec_simpson.f90    204    Adaptive scheme for Simpson's rule
CHP07/
  ngauss.f90         224    Naive Gaussian elimination to solve linear systems
  gauss.f90       236/239   Gaussian elimination with scaled partial pivoting
  tri.f90            251    Solves tridiagonal systems
  penta.f90          253    Solves pentadiagonal linear systems
CHP09/
  spline1.f90        281    Interpolates table using a first-degree spline func*
 *tion
  spline3.f90        297    Natural cubic spline function at equidistant points
  bspline2.f90       319    Interpolates table using a quadratic B-spline funct*
 *ion
  sch.f90            322    Interpolates table using Schoenberg's process
CHP10/
  euler.f90          328    Euler's method for solving an ODE
  taylor.f90         319    Taylor series method (order 4) for solving an ODE
  rk4.f90            339    Runge-Kutta method (order 4) for solving an IVP
  rk45.f90           351    Runge-Kutta-Fehlberg method for solving an IVP
  rk45ad.f90         352    Adaptive Runge-Kutta-Fehlberg method
CHP11/
  taylorsys1.f90     362    Taylor series method (order 4) for systems of ODEs
  taylorsys2.f90     364    Taylor series method (order 4) for systems of ODEs
  rk4sys.f90         365    Runge-Kutta method (order 4) for systems of ODEs
  amrk.f90        377-378   Adams-Moulton method for systems of ODEs
  amrkad.f90      408-409   Adaptive Adams-Moulton method for systems of ODE's


                                2




File Name            Pages    Description of Fortran 90 Code

CHP13/
  test_random.f90   413/414   Example to compute, store, and print random numbe*
 *rs
  coarse_check.f90      414   Coarse check on the random-number generator
  double_integral.f90   424   Volume of a complicated 3D region by Monte Carlo
  volume_region.f90 345-346   Numerical value of integral over a 2D disk by Mon*
 *te Carlo
  cone.f90              426   Ice cream cone example
  loaded_die.f90        430   Loaded die problem simulation
  birthday.f90          432   Birthday problem simulation
  needle.f90            433   Buffon's needle problem simulation
  two_die.f90           434   Two dice problem simulation
  shielding.f90         435   Neutron shielding problem simulation

CHP14/
  bvp1.f90              450   Boundary value problem solved by discretization t*
 *echnique
  bvp2.f90              453   Boundary value problem solved by shooting method

CHP15/
  parabolic1.f90        462   Parabolic partial differential equation problem
  parabolic2.f90        464   Parabolic PDE problem solved by Crank-Nicolson me*
 *thod
  hyperbolic.f90        472   Hyperbolic PDE problem solved by discretization
  seidel.f90            480   Elliptic PDE solved by discretization/ Gauss-Seid*
 *el method
INFO/
  info_f90_code.tex           LaTEX file containing information on f90 codes
  info_f90_code.tty           ASCII file containing information on f90 codes



                                3
